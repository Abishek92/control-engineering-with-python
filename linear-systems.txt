% Linear Systems


::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    # Python 3.x Standard Library
    import gc
    import os

    # Third-Party Packages
    from numpy import *
    from matplotlib.pyplot import *
    from mpl_toolkits.mplot3d import *
    from scipy.linalg import *


    import numpy as np; np.seterr(all="ignore")
    import numpy.linalg as la
    import scipy.misc
    import matplotlib as mpl; mpl.use("Agg")
    import matplotlib.pyplot as pp
    import matplotlib.axes as ax
    import matplotlib.patches as pa


    #
    # Matplotlib Configuration & Helper Functions
    # --------------------------------------------------------------------------
    
    # TODO: also reconsider line width and markersize stuff "for the web
    #       settings".
    fontsize = 35

    rc = {
        "text.usetex": True,
        "pgf.preamble": [r"\usepackage{amsmath,amsfonts,amssymb}"], 
        #"font.family": "serif",
        "font.serif": [],
        #"font.sans-serif": [],
        "legend.fontsize": fontsize, 
        "axes.titlesize":  fontsize,
        "axes.labelsize":  fontsize,
        "xtick.labelsize": fontsize,
        "ytick.labelsize": fontsize,
        #"savefig.dpi": 300,
        #"figure.dpi": 300,
    }
    mpl.rcParams.update(rc)

    # Web target: 160 / 9 inches (that's ~45 cm, this is huge) at 90 dpi 
    # (the "standard" dpi for Web computations) gives 1600 px.
    width_in = 160 / 9 

    def save(name):
        cwd = os.getcwd()
        root = os.path.dirname(os.path.realpath(__file__))
        os.chdir(root)
        pp.savefig(name + ".svg")
        os.chdir(cwd)

    def set_ratio(ratio=1.0, bottom=0.1, top=0.1, left=0.1, right=0.1):
        height_in = (1.0 - left - right)/(1.0 - bottom - top) * width_in / ratio
        pp.gcf().set_size_inches((width_in, height_in))
        pp.gcf().subplots_adjust(bottom=bottom, top=1.0-top, left=left, right=1.0-right)

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::



Preamble
================================================================================

Inputs
--------------------------------------------------------------------------------

It's handy to introduce non-autonomous ODEs.

There are designated as

  $$
  \dot{x} = f(x, u)
  $$

where $x \in \mathbb{R}^n$ and $u \in \mathbb{R}^m$,
that is 

$$f: \mathbb{R}^n \times \mathbb{R}^m \to \mathbb{R}^n.$$

--------------------------------------------------------------------------------

The vector-valued $u$ is the **system input**.

This quantity may depend on the time $t$
 
$$
u: t \in \mathbb{R} \mapsto u(t) \in \mathbb{R}^m,
$$

(actually it may also depend on some state, but we will adress this later).

--------------------------------------------------------------------------------

A solution of 

$\dot{x} = f(x, u)$ and $x(t_0) = x_0$ 

is merely a solution of 

$\dot{x} = h(t,x)$ and $x(t_0) = x_0$, 

where

$h(t, x) = f(x, u(t))$.


Outputs
--------------------------------------------------------------------------------

We may complement the system dynamics with an equation

$$
y = g(x, u) \in \mathbb{R}^p
$$

The vector $y$ refers to the **systems output**, usually the quantities that
we can effectively measure in a system (the state $x$ itself may be unknown).


What Are Linear Systems?
================================================================================

Standard Form
--------------------------------------------------------------------------------

Input $u \in \mathbb{R}^m$, state $x \in \mathbb{R}^n$, 
output $y \in \mathbb{R}^p$.

  $$
  \begin{array}{c}
  \dot{x} &=& A x + B u \\
  y       &=& C x + D u
  \end{array}
  $$

Why Linear ?
--------------------------------------------------------------------------------

Assume that:

  - $\dot{x}_1 = A x_1 + B u_1$, $x_1(0) = x_{10}$,

  - $\dot{x}_2 = A x_2 + B u_2$, $x_2(0) = x_{20}$,

--------------------------------------------------------------------------------

Set

  - $x_3 = \lambda x_1 + \mu x_2$, 
  
  - $u_3 = \lambda u_1 + \mu u_2$ and

  - $x_{30} = \lambda x_{10} + \mu x_{20}$.

for some $\lambda$ and $\mu$.


--------------------------------------------------------------------------------

Then

$$
\dot{x}_3 = A x_3 + B u_3, \; x_3(0) = x_{30}.
$$


Internal + External Dynamics
--------------------------------------------------------------------------------

**Corollary:** Since $(x_0, u) = (x_0, 0) + (0, u)$ the solution of 

$$
\dot{x} = A x + Bu, \; x(0) = x_0
$$

is the sum of the solutions $x_1$ and $x_2$ of:

--------------------------------------------------------------------------------

the **internal dynamics**

$$
\dot{x}_1 = A x_1, \; x_1(0) = x_0
$$

(behavior controlled by the initial value only, no input)

and the **external dynamics**:

$$
\dot{x}_2 = A x_2 + Bu, \; x_2(0) = 0
$$

(behavior controlled by the input, the systems is initially at rest)


Matrix Size
--------------------------------------------------------------------------------

$A \in \mathbb{R}^{n \times n}$, $B \in \mathbb{R}^{n\times m}$,
$C \in \mathbb{R}^{p \times n}$, $D \in \mathbb{R}^{p \times m}$.


  $$
  \left[
  \begin{array}{c|c}
  A &  B \\
  \hline
  C &  D
  \end{array} 
  \right]
  $$


   
LTI Systems
--------------------------------------------------------------------------------

They are actually referred to as **linear time-invariant (LTI)** 
systems: 

When $x(t)$ is a solution of

$$
\dot{x} = A x + Bu, \; x(0) = x_0,
$$

then $x(t- t_0)$ is a solution of 

$$
\dot{x} = A x + Bu(t-t_0), \; x(t_0) = x_0.
$$



<i class="fa fa-eye"></i> -- Linear System / Heat Equation
--------------------------------------------------------------------------------


![](images/static/heat-simple.svg)

Simplified Model
--------------------------------------------------------------------------------

  - Four cells numbered 1 to 4 are arranged in a row.

  - The first cell has a heat source, the last one a temperature sensor.

  - The heat sink/source is increasing the temperature of its cell 
    of $u$ degrees by second.

  - If the temperature of a cell is $T$ and the one of a neighbor is
    $T_n$, $T$ increases of $T_n - T$ by second.

--------------------------------------------------------------------------------

Given the geometric layout:

  - $d T_1/dt = u + (T_2 - T_1)$

  - $d T_3/dt = (T_1 - T_2) + (T_3 - T_2)$

  - $d T_3/dt = (T_2 - T_3) + (T_4 - T_3)$

  - $d T_4/dt = (T_3 - T_4)$

  - $y = T_4$

--------------------------------------------------------------------------------

Set $x = (T_1, T_2, T_3, T_4)$. 

The model is linear and its standard matrices are:

$$
A = \left[
  \begin{array}{rrrr}
-1 & 1 & 0 & 0   \\
1  & -1 & 1 & 0 \\
0 & 1 & -1 & 1  \\
0 & 0 & 1 & -1 
\end{array}
\right]
$$

--------------------------------------------------------------------------------

$$
B = \left[
  \begin{array}{c}
  1 \\ 0 \\ 0 \\ 0
  \end{array} 
  \right], \;
C = 
\left[ 
\begin{array}{cccc}
0 & 0 & 0 & 1
\end{array}
\right],
\; D = [0]
$$




Nonlinear to Linear
--------------------------------------------------------------------------------

Consider the nonlinear system

  $$
  \begin{array}{ccc}
  \dot{x} &=& f(x, u) \\
        y &=& g(x, u)
  \end{array}
  $$ 

Assume that $x_e$ is an equilibrium when $u=u_e$ (cst):

  $$
  f(x_e, u_e) = 0
  $$

and let 
  
  $$
  y_e = g(x_e, u_e)
  $$

--------------------------------------------------------------------------------

Define the error variables 

  - $\Delta x = x - x_e$, 
  
  - $\Delta u = u - u_e$ and

  - $\Delta y = y - y_e$.

--------------------------------------------------------------------------------

As long as the error variables stay small

  $$
  f(x, u) 
  \simeq
  \overbrace{f(x_e, u_e)}^0 + 
  \frac{\partial f}{\partial x}(x_e, u_e) \Delta x
  + \frac{\partial f}{\partial u}(x_e, u_e) \Delta u
  $$

  $$
  g(x, u) 
  \simeq
  \overbrace{g(x_e, u_e)}^{y_e} + 
  \frac{\partial g}{\partial x}(x_e, u_e) \Delta x
  + \frac{\partial g}{\partial u}(x_e, u_e) \Delta u
  $$

--------------------------------------------------------------------------------

Hence, the error variables satisfy *approximately*

  $$
  \begin{array}{c}
  d(\Delta x)/dt &=& A \Delta x + B \Delta u \\
  \Delta y       &=& C \Delta x + D \Delta u
  \end{array}
  $$

with

  $$
  \left[
  \begin{array}{c|c}
  A &  B \\
  \hline
  C &  D
  \end{array} 
  \right]
  = 
  \left[
  \begin{array}{c|c}
  \frac{\partial f}{\partial x} &  \frac{\partial f}{\partial u} \\
  \hline
  \frac{\partial g}{\partial x} &  \frac{\partial g}{\partial u}
  \end{array} 
  \right](x_e, u_e)
  $$


Asymptotic Stability
--------------------------------------------------------------------------------

The equilibrium $x_e$ is locally asymptotically 
stable for 

  $$
  \dot{x} = f(x, u_e)
  $$

$\Longleftrightarrow$

The equilibrium $0$ is locally 
asymptotically stable for 

$$
\frac{d \Delta x}{dt} = A \Delta x
$$ 

where $A = \partial f (x_e, u_e) / \partial x.$

<i class="fa fa-eye"></i> -- Linearization
--------------------------------------------------------------------------------

Consider

$$
\dot{x} = -x^2 + u, \; y = x u
$$

If we set $u_e = 1$, the system has an equilibrium at $x_e = 1$
(and also $x_e = -1$ but we focus on the former) and the corresponding
$y$ is $y_e = x_e u_e = 1$.

--------------------------------------------------------------------------------

Around this configuration $(x_e, u_e) = (1, 1)$, we have

$$
\frac{\partial (-x^2+u)}{\partial x} = -2x_e = -2,
\; \frac{\partial (-x^2+u)}{\partial u} = 1,
$$

and

$$
\frac{\partial x u }{\partial x} = u_e = 1,
\; \frac{\partial x u}{\partial u} = x_e = 1.
$$

--------------------------------------------------------------------------------

Thus, the approximate, linearized dynamics around this equilibrium is

$$
\begin{array}{rcr}
d(x-1)/dt &=& -2 (x - 1) + (u - 1) \\
y -1      &=&  (x - 1) + (u - 1)
\end{array}
$$






<i class="fa fa-question-circle-o"></i> -- Linearized Dynamics / Pendulum
--------------------------------------------------------------------------------

A pendulum submitted to a torque $c$ is governed by

$$
m \ell^2 \ddot{\theta} + b \dot{\theta} + m g \ell \sin \theta = c.
$$

We assume that only the angle $\theta$ is effectively measured.

--------------------------------------------------------------------------------

  - What are the function $f$ and $g$ that determine the nonlinear
    dynamics of the pendulum when $x=(\theta, \dot{\theta})$,
    $u=c$ and $y=\theta$?

  - Show that for any angle $\theta_e$ we can find a constant value $c_e$
    of the torque such that $x_e = (\theta_e, 0)$ is an equilibrium.

  - Compute the linearized dynamics of the pendulum around this equilibrium
    and put it in the standard form (compute $A$, $B$, $C$ and $D$).




Internal Dynamics
================================================================================




--------------------------------------------------------------------------------

    @vectorize
    def x(t):
        global A, x0
        A_ = array(A)
        return expm(A_*t) @ x0



Scalar Case
--------------------------------------------------------------------------------

  $$
  \dot{x} = a x
  $$

$a \in \mathbb{R}$, $x(0) = x_0 \in \mathbb{R}$.

**Solution:**

  $$
  x(t) = x_0 e^{a t}
  $$

--------------------------------------------------------------------------------
    
    a = 2.0

    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-2.svg)

--------------------------------------------------------------------------------
    
    a = 1.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-1.svg)

--------------------------------------------------------------------------------
    
    a = 0.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-0")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-0.svg)

--------------------------------------------------------------------------------
    
    a = -1.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-m1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-m1.svg)

--------------------------------------------------------------------------------
    
    a = -2.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-m2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-m2.svg)

Scalar Case ($\mathbb{C}$)
--------------------------------------------------------------------------------

  $$
  \dot{x} = a x
  $$

$a \in \mathbb{C}$, $x(0) = x_0 \in \mathbb{C}$.

**Solution:** if $a = \sigma + i \omega$ and $x_0 = |x_0| e^{i \angle x_0}$

  $$
  x(t) = x_0 e^{a t} = (|x_0| e^{\sigma t}) e^{i (\angle x_0 + \omega t)}
  $$

--------------------------------------------------------------------------------

    a = 1.0j
    figure()
    t = linspace(0.0, 20.0, 1000)
    A = array([[a]]); x0 = [1.0]
    plot(t, real(x(t)), label="$\mathrm{Re}(x(t))$")
    plot(t, imag(x(t)), label="$\mathrm{Im}(x(t))$")
    xlabel("$t$")
    legend(); grid()

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-alt-1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-alt-1.svg)

--------------------------------------------------------------------------------

    fig = figure()
    ax = fig.add_subplot(111, projection="3d")
    zticks = ax.set_zticks
    xt = squeeze(x(t))
    ax.plot(t, real(xt), imag(xt))
    xticks([0.0, 20.0]); yticks([]); zticks([])
    ax.set_xlabel("$t$")
    ax.set_ylabel("$\mathrm{Re}(x(t))$")
    ax.set_zlabel("$\mathrm{Im}(x(t))$")

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-3d")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

--------------------------------------------------------------------------------

![](images/scalar-LTI-3d.svg)

--------------------------------------------------------------------------------

    a = -0.1 + 1.0j
    figure()
    t = linspace(0.0, 20.0, 1000)
    A = array([[a]]); x0 = [1.0]
    plot(t, real(x(t)), label="$\mathrm{Re}(x(t))$")
    plot(t, imag(x(t)), label="$\mathrm{Im}(x(t))$")
    xlabel("$t$")
    legend(); grid()

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-alt-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-alt-2.svg)

--------------------------------------------------------------------------------

    fig = figure()
    ax = fig.add_subplot(111, projection="3d")
    zticks = ax.set_zticks
    xt = squeeze(x(t))
    ax.plot(t, real(xt), imag(xt))
    xticks([0.0, 20.0]); yticks([]); zticks([])
    ax.set_xlabel("$t$")
    ax.set_ylabel("$\mathrm{Re}(x(t))$")
    ax.set_zlabel("$\mathrm{Im}(x(t))$")

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-3d-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

--------------------------------------------------------------------------------

![](images/scalar-LTI-3d-2.svg)



--------------------------------------------------------------------------------

### Preamble

If $M \in \mathbb{C}^{n \times n}$,
the **exponential** is defined as:

  $$
  e^{M} = \sum_{i=0}^{+\infty} \frac{M^n}{n !} \in \mathbb{C}^{n \times n}
  $$

--------------------------------------------------------------------------------


### <i class="fa fa-warning"></i>

The exponential of a matrix $M$ is *not* 
the matrix with elements $e^{M_{ij}}$ (the elementwise exponential).

  - elementwise exponential: **`exp`** (`numpy` module),

  - exponential: **`expm`** (`scipy.linalg` module).


<i class="fa fa-question-circle-o"></i> Exponential Matrix
--------------------------------------------------------------------------------

Let 
  
  $$
  M = 
  \left[
  \begin{array}{cc}
  0 & 1 \\
  1 & 0
  \end{array}
  \right]
  $$

  - [<i class="fa fa-superscript"></i>] Compute the exponential of $M$.

    <i class="fa fa-key"></i> **Hint:**
    $\cosh x = \frac{e^x + e^{-x}}{2},$
    $\sinh x = \frac{e^x - e^{-x}}{2}.$

  - [<i class="fa fa-flask"></i>] Check the results with `expm`.


--------------------------------------------------------------------------------

Note that

  $$
  \begin{align}
  \frac{d}{dt} e^{A t} &= \frac{d}{dt} \sum_{n=0}^{+\infty} \frac{A^n}{n!} t^n \\ 
  &= \sum_{n=1}^{+\infty} \frac{A^{n}}{(n-1)!} t^{n-1} \\
  &= A \sum_{n=1}^{+\infty} \frac{A^{n-1}}{(n-1)!} t^{n-1} 
  = A e^{A t}
  \end{align}
  $$

--------------------------------------------------------------------------------

Thus, for any $A \in \mathbb{C}^{n\times n}$ and $x_0 \in \mathbb{C}^n$, 

  $$
  \frac{d}{dt} (e^{A t} x_0) 
  = A (e^{At} x_0)
  $$


Internal Dynamics
--------------------------------------------------------------------------------

The solution of

  $$
  \dot{x} = A x\; \mbox{ and } \; x(0) = x_0
  $$

is

  $$
  x(t) = e^{A t} x_0.
  $$

--------------------------------------------------------------------------------

Here **TODO** : local = global, attractivity = G.A.S


Scalar Case / Asymptotic Stability
--------------------------------------------------------------------------------

$\dot{x} = a x$ is asymptotically stable iff $\mathrm{Re} \, a < 0$.

What about the general case?


Stability Criteria
--------------------------------------------------------------------------------

Let $A \in \mathbb{C}^{n \times n}$.

The origin of $\dot{x} = A x$ is asymptotically stable 

$\Longleftrightarrow$
   
all eigenvalues of $A$ have a negative real part.


Why?
--------------------------------------------------------------------------------

If $A$ is diagonalizable with eigenvalues $\{\lambda_1, \dots, \lambda_n\}$,
there is an invertible matrix $P \in \mathbb{C}^{n \times n}$ such that

  $$
  P^{-1} A P = \mathrm{diag}(\lambda_1, \dots, \lambda_n) =
  \left[
  \begin{array}{cccc}
  \lambda_1 & 0         & \cdots & 0 \\
  0         & \lambda_2 & \cdots & 0 \\
  \vdots    & \vdots    & \vdots & \vdots \\
  0         & \cdots    & \cdots & \lambda_n
  \end{array}
  \right] 
  $$

--------------------------------------------------------------------------------

Thus, if $y = P x$, $\dot{x} = A x$ is equivalent to

  $$
  \left|
  \begin{array}{ccc}
  \dot{y}_1 &=& \lambda_1 y_1 \\
  \dot{y}_2 &=& \lambda_2 y_2 \\
  \vdots &=& \vdots \\
  \dot{y}_n &=& \lambda_n y_n \\
  \end{array}
  \right.
  $$

--------------------------------------------------------------------------------

  $$
  y_i(t) = y_i(0) e^{\lambda_i t}
  $$

--------------------------------------------------------------------------------

TODO: deal with eigenvectors too. Need to understand the "modes" associated
to each eigenvalue/vectors, time constant, oscillatory dynamics, etc.


<i class="fa fa-question-circle-o"></i> Stability / 2nd-order system
--------------------------------------------------------------------------------

Consider the scalar ODE 

  $$
  \ddot{x} = x
  $$

  - [<i class="fa fa-superscript"></i>] 
    Determine the representation of this system 
    as a first-order ODE with state $(x, \dot{x})$.

  - [<i class="fa fa-gears"></i>, <i class="fa fa-superscript"></i>] 
    Is this system asymptotically stable?

<i class="fa fa-question-circle-o"></i> Stability / Integrators
--------------------------------------------------------------------------------

Consider the system

  $$
  \dot{x} = J x 
  \; \mbox{ with } \; 
  J = 
  \left[
  \begin{array}{cccc}
  0 & 1 & 0 & \dots & 0 \\
  0 & 0 & 1 & \dots & 0 \\
  \vdots & \vdots & \vdots & \vdots & \vdots \\
  0 & 0 & 0 & \dots & 1 \\
  0 & 0 & 0 & \dots & 0
  \end{array}
  \right]
  $$

--------------------------------------------------------------------------------

  - [<i class="fa fa-gears"></i>, <i class="fa fa-superscript"></i>] 
    Compute the solution when 

      $$
      x(0) =
      \left[
      \begin{array}{c}
      0 \\
      \vdots \\
      0 \\
      1
      \end{array}
      \right]
      .$$

  - [<i class="fa fa-gears"></i>] Is the system asymptotically stable ? 



I/O Behavior
================================================================================

--------------------------------------------------------------------------------


  - Assume that the system is "initially at rest":

    $$
    x(0) = 0
    $$

  - Forget about the state $x(t)$ (may be unknown)

  - Study the input/output I/O relationship:

    $$
    u \to y
    $$

--------------------------------------------------------------------------------

In this context, we have:

  $$
  y(t) = \int_0^{t} C e^{A(s-t)} u(s) \, ds + D u(t)
  $$

--------------------------------------------------------------------------------

Now, 

   - extend $u(t)$ and $y(t)$ by $0$ when $t<0$ (as **causal signals**).

   - introduce the **Heaviside function** defined by

     $$
     e(t) = \left|
     \begin{array}{c}
     1 & \mbox{if } \; t\geq 0, \\
     0 & \mbox{if } \; t < 0.
     \end{array}
     \right.
     $$

Impulse Response
--------------------------------------------------------------------------------

  - define the **impulse response** by:

    $$
    H(t) = (C e^{At} B) \times e(t) + D \in \mathbb{R}^{p \times m}
    $$

  - when $p = m = 1$ (single-input & single-output or **SISO** systems),
    the $1 \times 1$ matrix $H(t)$ is identified to the scalar $h(t)$
    that is contains:

    $$
    H(t) = [h(t)]
    $$

    <i class="fa fa-sticky-note"></i> 
    **MIMO** refers to multiple-input & multiple-output systems.

--------------------------------------------------------------------------------

Then, we have:

  $$
  y(t) = \int_{-\infty}^{+\infty} H(t - s) u(s) \, ds 
  $$

and denote $\ast$ this operation
between $H$ and $u$:

  $$
  y(t) = (H \ast u) (t)
  $$

It's called a **convolution**.


<i class="fa fa-question-circle-o"></i> Impulse Response / Integrator
--------------------------------------------------------------------------------

  - [<i class="fa fa-superscript"></i>] Compute the impulse response of the 
    system
  
    $$
    \left| 
    \begin{array}{ccc}
    \dot{x} &=& u \\
    y &=& x \\
    \end{array}
    \right.
    $$

    where $u \in \mathbb{R}$, $x \in \mathbb{R}$ and $y \in \mathbb{R}$.


<i class="fa fa-question-circle-o"></i> Impulse Response / Double Integrator
--------------------------------------------------------------------------------

  - [<i class="fa fa-superscript"></i>] Compute the impulse response of the 
    system
  
    $$
    \left| 
    \begin{array}{ccc}
    \dot{x}_1 &=& x_2 \\
    \dot{x}_2 &=& u \\
    y &=& x_1 \\
    \end{array}
    \right.
    $$

    where $u \in \mathbb{R}$, $x=(x_1, x_2)^2 \in \mathbb{R}$ and $y \in \mathbb{R}$.



<i class="fa fa-question-circle-o"></i> Impulse Response / Gain
--------------------------------------------------------------------------------

  - [<i class="fa fa-superscript"></i>] Compute the impulse response of the 
    system
  
    $$
    y = K u
    $$

    where $u \in \mathbb{R}^m$, $y \in \mathbb{R}^p$ and 
    $K \in \mathbb{R}^{p \times m}$.



<i class="fa fa-question-circle-o"></i> Impulse Response / MIMO System
--------------------------------------------------------------------------------

 -  [<i class="fa fa-superscript"></i>] 
    Find a linear system with matrices $A$, $B$, $C$, $D$ 
    whose impulse response is

  $$
  H(t) = 
  \left[
  \begin{array}{cc}
  e^{t} e(t) & e^{-t} e(t)
  \end{array}
  \right]
  $$

 -  [<i class="fa fa-superscript"></i>] 
    Is there another set of matrices $A$, $B$, $C$, $D$ with the same
    impulse response? With a matrix $A$ of a different size?


Laplace Transform
--------------------------------------------------------------------------------

Associate to a scalar signal $x(t) \in \mathbb{R}$, 
$t\in \mathbb{R}$,
the function of a complex argument $s \in \mathbb{C}$:

  $$
  x(s) = \int_{-\infty}^{+\infty} x(t) e^{-st} \, dt.
  $$


<i class="fa fa-warning"></i> Notation
--------------------------------------------------------------------------------

We use the same symbol (here "$x$") to denote: 

  - a signal $x(t)$ and

  - and its Laplace transform $x(s)$
 
They are two equivalent representations of the same "object", 
but different mathematical "functions". 

If you fear some ambiguity, use named variables, e.g.:

  $$
  x(t=1) \, \mbox{ or } \, x(s=1) \, \mbox{ instead of } \, x(1).
  $$

Vector/Matrix-Valued Signals
--------------------------------------------------------------------------------

The Laplace transform of a vector-valued signal $x(t) \in \mathbb{R}^n$
or matrix-valued signals $X(t) \in \mathbb{R}^{m \times n}$ are computed
elementwise.

  $$
  x_{i}(s) = \int_{-\infty}^{+\infty} x_{i}(t) e^{-st} \, dt.
  $$

  $$
  X_{ij}(s) = \int_{-\infty}^{+\infty} X_{ij}(t) e^{-st} \, dt.
  $$

Rational & Causal Signals
--------------------------------------------------------------------------------

We will only deal with **rational & causal** signals:

  $$
  x(t) = \left(\sum_{\lambda \in \Lambda} p_{\lambda}(t) e^{\lambda} t\right) e(t)
  $$

where: 

  - $\Lambda$ is a finite subset of $\mathbb{C}$,

  - for every $\lambda \in \Lambda$, $p_{\lambda}(t)$ is a polynomial in $t$.

--------------------------------------------------------------------------------

  - Such signals are **causal** since $x(t) = 0$ when $t < 0$. 

  - They are **rational** since

      $$
      x(s) = \frac{n(s)}{d(s)}
      $$

    where $n(s)$ and $d(s)$ are polynomials.

    <i class="fa fa-sticky-note"></i> Causality $\Leftrightarrow$ $\deg n(s) \leq \deg d(s)$.


<i class="fa fa-eye"></i> "Impulses"
--------------------------------------------------------------------------------

Pick a time constant $\epsilon > 0$ and define

  $$
  \delta_{\epsilon}(t) = \frac{1}{\epsilon} e^{-t/\epsilon} e(t)
  $$


--------------------------------------------------------------------------------

    def delta(t, eps=1.0):
        return exp(-t / eps) / eps * (t >= 0)
    figure()
    t = linspace(-1,4,1000)
    plot(t, delta(t, eps=1.0), label="$\epsilon=1.0$")
    plot(t, delta(t, eps=0.5), label="$\epsilon=0.5$")
    plot(t, delta(t, eps=0.25), label="$\epsilon=0.25$")
    xlabel("$t$"); title("$\delta_{\epsilon}(t)$") 
    legend()

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/impulses")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/impulses.svg)

--------------------------------------------------------------------------------

  $$
  \begin{split}
  \delta_{\epsilon}(s) 
    &= \int_{-\infty}^{+\infty} \delta_{\epsilon}(t) e^{-st} \, dt \\
    &= \frac{1}{\epsilon} \int_{0}^{+\infty} e^{-(s + 1/\epsilon)t} \, dt \\
    &= \frac{1}{\epsilon} 
       \left[ 
       \frac{e^{-(s+1/\epsilon)t}}{-(s+1/\epsilon)} 
       \right]^{+\infty}_0 = \frac{1}{1 + \epsilon s}\\
  \end{split}
  $$

(assuming that $\mathrm{Re}(s) > -1/\epsilon$)


<i class="fa fa-question-circle-o"></i> Laplace Transform / ???
--------------------------------------------------------------------------------


**TODO**

<i class="fa fa-star-o"></i> Convolution & Laplace 
--------------------------------------------------------------------------------

The Laplace transform simplifies convolution calculus:

  $$
  y(t) = (h \ast u)(t)
  \; \Longleftrightarrow \;
  y(s) = h(s) \times u(s)
  $$

  $$
  y(t) = (H \ast u)(t)
  \; \Longleftrightarrow \;
  y(s) = H(s) \times u(s)
  $$

The function $h(s)$ (or $H(s)$) is the **transfer function** of the system

TODO: explain / show block-diagram
--------------------------------------------------------------------------------

(and associated exercice?)

<i class="fa fa-question-circle-o"></i> Conv + Laplace Transform / ???
--------------------------------------------------------------------------------


**TODO**


Impulse Response
--------------------------------------------------------------------------------

What is the meaning of the signal $h(t)$ ?

--------------------------------------------------------------------------------

  - The "limit" of the signal $\delta_{\epsilon}(t)$ when $\epsilon \to 0$
    is not defined *as a function* (issue for $t=0$) but as a *generalized
    function* $\delta(t)$, the **unit impulse**. 

  - This technicality can be avoided in the Laplace domain since
      $$
      \delta(s) = \lim_{\epsilon \to 0} \delta_{\epsilon}(s)
      =
      \lim_{\epsilon \to 0} \frac{1}{1 + \epsilon s} = 1.
      $$

--------------------------------------------------------------------------------

Thus, 

 1. if $u(t) = \delta(t)$ then

 2. $y(s) = h(s) \times \delta(s) = h(s) \times 1 = h(s)$

 3. and $y(t) = h(t)$.

**Conclusion:**
the impulse response $h(t)$ is the output of the system when
the input is the unit impulse $\delta(t)$.

TODO: UBIBO Stability?
--------------------------------------------------------------------------------






<style>

.reveal section img {
  border:0;
  height:50vh;
  width:auto;

}

.reveal section img.medium {
  border:0;
  max-width:50vh;
}

.reveal section img.icon {
  display:inline;
  border:0;
  width:1em;
  margin:0em;
  box-shadow:none;
  vertical-align:-10%;
}

.reveal code {
  font-family: Inconsolata, monospace;
}

.reveal pre code {
  font-size: 1.5em;
  line-height: 1.5em;
  /* max-height: 80wh; won't work, overriden */
}

input {
  font-family: "Source Sans Pro", Helvetica, sans-serif;
  font-size: 42px;
  line-height: 54.6px;
}

</style>

<link href="https://fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet"> 

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet">
