% Linear Systems


::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    # Python 3.x Standard Library
    import gc
    import os

    # Third-Party Packages
    from numpy import *
    from matplotlib.pyplot import *
    from mpl_toolkits.mplot3d import *
    from scipy.linalg import *


    import numpy as np; np.seterr(all="ignore")
    import numpy.linalg as la
    import scipy.misc
    import matplotlib as mpl; mpl.use("Agg")
    import matplotlib.pyplot as pp
    import matplotlib.axes as ax
    import matplotlib.patches as pa


    #
    # Matplotlib Configuration & Helper Functions
    # --------------------------------------------------------------------------
    
    # TODO: also reconsider line width and markersize stuff "for the web
    #       settings".
    fontsize = 35

    rc = {
        "text.usetex": True,
        "pgf.preamble": [r"\usepackage{amsmath,amsfonts,amssymb}"], 
        #"font.family": "serif",
        "font.serif": [],
        #"font.sans-serif": [],
        "legend.fontsize": fontsize, 
        "axes.titlesize":  fontsize,
        "axes.labelsize":  fontsize,
        "xtick.labelsize": fontsize,
        "ytick.labelsize": fontsize,
        #"savefig.dpi": 300,
        #"figure.dpi": 300,
    }
    mpl.rcParams.update(rc)

    # Web target: 160 / 9 inches (that's ~45 cm, this is huge) at 90 dpi 
    # (the "standard" dpi for Web computations) gives 1600 px.
    width_in = 160 / 9 

    def save(name):
        cwd = os.getcwd()
        root = os.path.dirname(os.path.realpath(__file__))
        os.chdir(root)
        pp.savefig(name + ".svg")
        os.chdir(cwd)

    def set_ratio(ratio=1.0, bottom=0.1, top=0.1, left=0.1, right=0.1):
        height_in = (1.0 - left - right)/(1.0 - bottom - top) * width_in / ratio
        pp.gcf().set_size_inches((width_in, height_in))
        pp.gcf().subplots_adjust(bottom=bottom, top=1.0-top, left=left, right=1.0-right)

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::



Introduction
================================================================================



What Are Linear Systems?
--------------------------------------------------------------------------------

**Standard Form:**

input $u \in \mathbb{R}^m$, state $x \in \mathbb{R}^n$, 
output $y \in \mathbb{R}^p$.

  $$
  \begin{array}{c}
  \dot{x} &=& A x + B u \\
  y       &=& C x + D u
  \end{array}
  $$

--------------------------------------------------------------------------------

$A \in \mathbb{R}^{n \times n}$, $B \in \mathbb{R}^{n\times n}$,
$C \in \mathbb{R}^{p \times n}$, $D \in \mathbb{R}^{p \times m}$.

Nonlinear to Linear
--------------------------------------------------------------------------------

Consider $\dot{x} = f(x, u)$ (and $y = g(x, u)$). 

Assume that $x_e$ is an equilibrium when $u=u_e$:

  $$
  f(x_e, u_e) = 0
  $$

(and let $u_e = g(x_e, u_e)$)

Define $\Delta x = x - x_e$, $\Delta u = u - u_e$  
(and $\Delta y = y - y_e$).

--------------------------------------------------------------------------------

Then

$$
\frac{d\Delta x}{dt}
\simeq 
\frac{\partial f}{\partial x}(x_e, u_e) \Delta x
+ \frac{\partial f}{\partial x}(x_e, u_e) \Delta u
$$

$$
\left(\Delta y 
\simeq
\frac{\partial g}{\partial x}(x_e, u_e) \Delta x
+ \frac{\partial g}{\partial x}(x_e, u_e) \Delta u 
\right)
$$


--------------------------------------------------------------------------------

The delta variables $\Delta x$ and $\Delta u$ satisfy *approximately*

  $$
  \begin{array}{c}
  \frac{d \Delta x}{dt} &=& A \Delta x + B \Delta u \\
  \Delta y       &=& C \Delta x + D \Delta u
  \end{array}
  $$

with

  $$
  \left[
  \begin{array}{c|c}
  A &  B \\
  \hline
  C &  D
  \end{array} 
  \right]
  = 
  \left[
  \begin{array}{c|c}
  \frac{\partial f}{\partial x} &  \frac{\partial f}{\partial u} \\
  \hline
  \frac{\partial g}{\partial x} &  \frac{\partial g}{\partial u}
  \end{array} 
  \right](x_e, u_e)
  $$

--------------------------------------------------------------------------------

Several "interpretations" of the system, where do we talk about this:

  - "general case" classic IVP, $t \geq 0$, initial condition

But the study can be split in two "extreme" modes (proof !):

  - autonomous mode / internal dynamics: 
    influence of $x_0$ only, without $u$ or $y$.
    We can always pick $t_0 = 0$.

  - $x_0 = 0$, input-to-state or input-to-output behavior.
    Optionnaly, $t_0$ rejected to $-\infty$ (necessary ?).


Stability
--------------------------------------------------------------------------------

Stability concepts simplify/"collapse" for LTI systems:

  - A system is locally A.S. iff it is globally A.S.

**TODO:** explain in two drawings here why.

Therefore we just say "asymptotically stable"

  - The origin is attractive iff it is asymptotically stable.


(Q: A.S. qualifier applied to the equilibrium point or system ?)


Explicit Solution
--------------------------------------------------------------------------------

Internal Dynamics:

  $$
  x(t) = e^{At} x_0
  $$

(need some details here on exponential, corresponding code with
`expm`, etc.).


Solver
--------------------------------------------------------------------------------

    @vectorize
    def x(t):
        global A, x0
        A_ = array(A)
        return expm(A_*t) @ x0




--------------------------------------------------------------------------------

External Dynamics: (variation of the constant):

  $$
  y(t) = C \int_0^t e^{A(t-s)}B u(s) \, ds + D u(t) 
  $$


Internal Stability
================================================================================




Scalar Case
--------------------------------------------------------------------------------

  $$
  \dot{x} = a x
  $$

$a \in \mathbb{R}$, $x(0) = x_0 \in \mathbb{R}$.

**Solution:**

  $$
  x(t) = x_0 e^{a t}
  $$

--------------------------------------------------------------------------------
    
    a = 2.0

    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-2.svg)

--------------------------------------------------------------------------------
    
    a = 1.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-1.svg)

--------------------------------------------------------------------------------
    
    a = 0.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-0")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-0.svg)

--------------------------------------------------------------------------------
    
    a = -1.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-m1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-m1.svg)

--------------------------------------------------------------------------------
    
    a = -2.0
    A = [[a]]; x0 = [1.0]
    figure()
    t = linspace(0.0, 3.0, 1000)
    plot(t, x(t), "k")
    xlabel("$t$"); ylabel("$x(t)$"); title(f"$a={a}$")
    grid(); axis([0.0, 2.0, 0.0, 10.0])

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-m2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-m2.svg)

Scalar Case ($\mathbb{C}$)
--------------------------------------------------------------------------------

  $$
  \dot{x} = a x
  $$

$a \in \mathbb{C}$, $x(0) = x_0 \in \mathbb{C}$.

**Solution:** if $a = \sigma + i \omega$ and $x_0 = |x_0| e^{i \angle x_0}$

  $$
  x(t) = x_0 e^{a t} = (|x_0| e^{\sigma t}) e^{i (\angle x_0 + \omega t)}
  $$

--------------------------------------------------------------------------------

    a = 1.0j
    figure()
    t = linspace(0.0, 20.0, 1000)
    A = array([[a]]); x0 = [1.0]
    plot(t, real(x(t)), label="$\mathrm{Re}(x(t))$")
    plot(t, imag(x(t)), label="$\mathrm{Im}(x(t))$")
    xlabel("$t$")
    legend(); grid()

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-alt-1")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-alt.svg)

--------------------------------------------------------------------------------

    fig = figure()
    ax = fig.add_subplot(111, projection="3d")
    zticks = ax.set_zticks
    xt = squeeze(x(t))
    ax.plot(t, real(xt), imag(xt))
    xticks([0.0, 20.0]); yticks([]); zticks([])
    ax.set_xlabel("$t$")
    ax.set_ylabel("$\mathrm{Re}(x(t))$")
    ax.set_zlabel("$\mathrm{Im}(x(t))$")

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-3d")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

--------------------------------------------------------------------------------

![](images/scalar-LTI-3d.svg)

--------------------------------------------------------------------------------

    a = -0.1 + 1.0j
    figure()
    t = linspace(0.0, 20.0, 1000)
    A = array([[a]]); x0 = [1.0]
    plot(t, real(x(t)), label="$\mathrm{Re}(x(t))$")
    plot(t, imag(x(t)), label="$\mathrm{Im}(x(t))$")
    xlabel("$t$")
    legend(); grid()

--------------------------------------------------------------------------------

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-alt-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

![](images/scalar-LTI-alt-2.svg)

--------------------------------------------------------------------------------

    fig = figure()
    ax = fig.add_subplot(111, projection="3d")
    zticks = ax.set_zticks
    xt = squeeze(x(t))
    ax.plot(t, real(xt), imag(xt))
    xticks([0.0, 20.0]); yticks([]); zticks([])
    ax.set_xlabel("$t$")
    ax.set_ylabel("$\mathrm{Re}(x(t))$")
    ax.set_zlabel("$\mathrm{Im}(x(t))$")

::: hidden :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

    tight_layout()
    save("images/scalar-LTI-3d-2")

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

--------------------------------------------------------------------------------

![](images/scalar-LTI-3d-2.svg)


Scalar Case / Asymptotic Stability
--------------------------------------------------------------------------------

$\dot{x} = a x$ is asymptotically stable iff $\mathrm{Re} \, a < 0$.

What about the general case?


Stability Criteria
--------------------------------------------------------------------------------

Let $A \in \mathbb{R}^{n \times n}$.

The equilibrium $x_e=0$ of $\dot{x} = A x$ is asymptotically stable iff   
all eigenvalues of $A$ have a negative real part.

Why?
--------------------------------------------------------------------------------

If $A$ is diagonalizable with eigenvalues $\{\lambda_1, \dots, \lambda_n\}$,
there is an invertible matrix $P \in \mathbb{C}^{n \times n}$ such that

  $$
  P^{-1} A P = \mathrm{diag}(\lambda_1, \dots, \lambda_n) =
  \left[
  \begin{array}{cccc}
  \lambda_1 & 0         & \cdots & 0 \\
  0         & \lambda_2 & \cdots & 0 \\
  \vdots    & \vdots    & \vdots & \vdots \\
  0         & \cdots    & \cdots & \lambda_n
  \end{array}
  \right] 
  $$

--------------------------------------------------------------------------------

Thus, if $y = P x$, $\dot{x} = A x$ is equivalent to

  $$
  \left|
  \begin{array}{ccc}
  \dot{y}_1 &=& \lambda_1 y_1 \\
  \dot{y}_2 &=& \lambda_2 y_2 \\
  \vdots &=& \vdots \\
  \dot{y}_n &=& \lambda_n y_n \\
  \end{array}
  \right.
  $$

--------------------------------------------------------------------------------

  $$
  y_i(t) = y_i(0) e^{\lambda_i t}
  $$

--------------------------------------------------------------------------------

TODO: deal with eigenvectors too. Need to understand the "modes" associated
to each eigenvalue/vectors, time constant, oscillatory dynamics, etc.


Laplace & I/O Stability
================================================================================

--------------------------------------------------------------------------------

TODO. New document or not? What to put in this section?



<style>

.reveal section img {
  border:0;
  height:50vh;
  width:auto;

}

.reveal section img.medium {
  border:0;
  max-width:50vh;
}

.reveal section img.icon {
  display:inline;
  border:0;
  width:1em;
  margin:0em;
  box-shadow:none;
  vertical-align:-10%;
}

.reveal code {
  font-family: Inconsolata, monospace;
}

.reveal pre code {
  font-size: 1.5em;
  line-height: 1.5em;
  /* max-height: 80wh; won't work, overriden */
}

input {
  font-family: "Source Sans Pro", Helvetica, sans-serif;
  font-size: 42px;
  line-height: 54.6px;
}

</style>

<link href="https://fonts.googleapis.com/css?family=Inconsolata:400,700" rel="stylesheet"> 

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet">
